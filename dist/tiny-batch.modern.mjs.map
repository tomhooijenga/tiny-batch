{"version":3,"file":"tiny-batch.modern.mjs","sources":["../src/schedulers.ts","../src/queue.ts","../src/index.ts"],"sourcesContent":["import { Scheduler } from \"./types\";\n\n/**\n * Queues a flush in the microtask queue at the first call.\n */\nexport const microtaskScheduler = (): Scheduler => {\n  return (queue, flush) => {\n    if (queue.length === 1) {\n      queueMicrotask(flush);\n    }\n  };\n};\n\n/**\n * Flushes every given ms, regardless of the queue.\n */\nexport const intervalScheduler = (ms: number): Scheduler & { stop(): void } => {\n  let timerId: ReturnType<typeof setInterval>;\n  const fn: Scheduler & { stop(): void } = (queue, flush) => {\n    if (queue.length === 1) {\n      timerId = setInterval(flush, ms);\n    }\n  };\n  fn.stop = () => {\n    clearInterval(timerId);\n  };\n\n  return fn;\n};\n\n/**\n * Waits the given amount of ms after the first call to flush.\n */\nexport const timeoutScheduler = (ms: number): Scheduler & { stop(): void } => {\n  let timerId: ReturnType<typeof setTimeout>;\n  const fn: Scheduler & { stop(): void } = (queue, flush) => {\n    if (queue.length === 1) {\n      timerId = setTimeout(flush, ms);\n    }\n  };\n  fn.stop = () => {\n    clearTimeout(timerId);\n  };\n\n  return fn;\n};\n\n/**\n * Flushes after the given amount of calls.\n * @param max\n */\nexport const amountScheduler = (max: number): Scheduler => {\n  return (queue, flush) => {\n    if (queue.length === max) {\n      flush();\n    }\n  };\n};\n","import { Reject, Resolve, Resolver } from \"./types\";\n\nexport class Queue<Args, Result> {\n  readonly args: Args[] = [];\n  readonly resolvers: Resolver<Result>[] = [];\n\n  add(args: Args, resolve: Resolve<Result>, reject: Reject): void {\n    this.args.push(args);\n    this.resolvers.push({ resolve, reject });\n  }\n\n  reset(): { args: Args[]; resolvers: Resolver<Result>[] } {\n    const args = this.args.splice(0);\n    const resolvers = this.resolvers.splice(0);\n\n    return { args, resolvers };\n  }\n\n  isEmpty(): boolean {\n    return this.args.length === 0;\n  }\n\n  get length(): number {\n    return this.args.length;\n  }\n}\n","import { AddToBatch, ExecuteBatch, Scheduler } from \"./types\";\nimport { microtaskScheduler } from \"./schedulers\";\nimport { Queue } from \"./queue\";\n\nexport * from \"./schedulers\";\nexport * from \"./types\";\n\nexport function tinybatch<Args extends unknown[], Result = void>(\n  callback: ExecuteBatch<Args, Result>,\n  scheduler: Scheduler = microtaskScheduler(),\n): AddToBatch<Args, Result> {\n  const queue = new Queue<Args, Result>();\n\n  const fn: AddToBatch<Args, Result> = (...args) => {\n    return new Promise((resolve, reject) => {\n      queue.add(args, resolve, reject);\n\n      scheduler(queue.args, fn.flush);\n    });\n  };\n\n  fn.queue = queue;\n  fn.scheduler = scheduler;\n  fn.flush = async () => {\n    if (queue.isEmpty()) {\n      return;\n    }\n\n    const { args, resolvers } = queue.reset();\n    const results = (await callback(args)) ?? [];\n\n    for (let i = 0; i < resolvers.length; i++) {\n      const { resolve, reject } = resolvers[i];\n      const result = results[i];\n\n      if (result instanceof Error) {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    }\n  };\n\n  return fn;\n}\n\nexport default tinybatch;\n"],"names":["microtaskScheduler","queue","flush","length","queueMicrotask","intervalScheduler","ms","timerId","fn","setInterval","stop","clearInterval","timeoutScheduler","setTimeout","clearTimeout","amountScheduler","max","Queue","constructor","args","resolvers","add","resolve","reject","push","reset","splice","isEmpty","tinybatch","callback","scheduler","Promise","_await$callback","results","i","result","Error"],"mappings":"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"}