{"version":3,"file":"tiny-batch.module.js","sources":["../src/schedulers.ts","../src/queue.ts","../src/index.ts"],"sourcesContent":["import {Scheduler} from \"./types\";\r\n\r\n/**\r\n * Queues a flush in the microtask queue at the first call.\r\n */\r\nexport const microtaskScheduler = (): Scheduler => {\r\n    return (queue, flush) => {\r\n        if (queue.length === 1) {\r\n            queueMicrotask(flush);\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Flushes every given ms, regardless of the queue.\r\n */\r\nexport const intervalScheduler = (ms: number): Scheduler & { stop(): void } => {\r\n    let timerId: ReturnType<typeof setInterval>;\r\n    const fn: Scheduler & { stop(): void } = (queue, flush) => {\r\n        if (queue.length === 1) {\r\n            timerId = setInterval(flush, ms);\r\n        }\r\n    };\r\n    fn.stop = () => {\r\n        clearInterval(timerId);\r\n    };\r\n\r\n    return fn;\r\n};\r\n\r\n/**\r\n * Waits the given amount of ms after the first call to flush.\r\n */\r\nexport const timeoutScheduler = (ms: number): Scheduler & { stop(): void } => {\r\n    let timerId: ReturnType<typeof setTimeout>;\r\n    const fn: Scheduler & { stop(): void } = (queue, flush) => {\r\n        if (queue.length === 1) {\r\n            timerId = setTimeout(flush, ms);\r\n        }\r\n    };\r\n    fn.stop = () => {\r\n        clearTimeout(timerId);\r\n    };\r\n\r\n    return fn;\r\n};\r\n\r\n/**\r\n * Flushes after the given amount of calls.\r\n * @param max\r\n */\r\nexport const amountScheduler = (max: number): Scheduler => {\r\n    return (queue, flush) => {\r\n        if (queue.length === max) {\r\n            flush();\r\n        }\r\n    };\r\n};\r\n","import {Resolver} from \"./types\";\r\n\r\nexport class Queue<Result, Args> {\r\n    readonly args: Args[] = [];\r\n    readonly resolvers: Resolver<Result>[] = [];\r\n\r\n    add(args: Args, resolver: Resolver<Result>): void {\r\n        this.args.push(args);\r\n        this.resolvers.push(resolver);\r\n    }\r\n\r\n    reset(): {args: Args[]; resolvers: Resolver<Result>[]} {\r\n        const args = this.args.splice(0);\r\n        const resolvers = this.resolvers.splice(0);\r\n\r\n        return {args, resolvers};\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.args.length === 0;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.args.length;\r\n    }\r\n}\r\n","import {AddToBatch, ExecuteBatch, Scheduler} from \"./types\";\r\nimport {microtaskScheduler} from \"./schedulers\";\r\nimport {Queue} from \"./queue\";\r\n\r\nexport * from \"./schedulers\";\r\nexport * from \"./types\";\r\n\r\nexport function tinybatch<\r\n    Result,\r\n    Args extends unknown[] = []\r\n>(\r\n    callback: ExecuteBatch<Result, Args>,\r\n    scheduler: Scheduler = microtaskScheduler()\r\n): AddToBatch<Result, Args> {\r\n\r\n    const queue = new Queue<Result, Args>();\r\n\r\n    const fn: AddToBatch<Result, Args> = (...args: Args) => {\r\n        return new Promise<Result>((resolve => {\r\n            queue.add(args, resolve);\r\n\r\n            scheduler(queue.args, fn.flush);\r\n        }));\r\n    };\r\n\r\n    fn.queue = queue;\r\n    fn.scheduler = scheduler;\r\n    fn.flush = () => {\r\n        if (queue.isEmpty()) {\r\n            return;\r\n        }\r\n\r\n        const {args, resolvers} = queue.reset();\r\n\r\n        Promise\r\n            .resolve(callback(args))\r\n            .then((results) => {\r\n                results.forEach((args, index) => {\r\n                    resolvers[index](args);\r\n                });\r\n            });\r\n    };\r\n\r\n    return fn;\r\n}\r\n\r\nexport default tinybatch;\r\n"],"names":["microtaskScheduler","queue","flush","length","queueMicrotask","intervalScheduler","ms","timerId","fn","setInterval","stop","clearInterval","timeoutScheduler","setTimeout","clearTimeout","amountScheduler","max","Queue","add","args","resolver","push","resolvers","reset","splice","isEmpty","tinybatch","callback","scheduler","Promise","resolve","then","results","forEach","index"],"mappings":"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"}