{"version":3,"file":"tiny-batch.module.js","sources":["../src/schedulers.ts","../src/queue.ts","../src/index.ts"],"sourcesContent":["import { Scheduler } from \"./types\";\n\n/**\n * Queues a flush in the microtask queue at the first call.\n */\nexport const microtaskScheduler = (): Scheduler => {\n  return (queue, flush) => {\n    if (queue.length === 1) {\n      queueMicrotask(flush);\n    }\n  };\n};\n\n/**\n * Flushes every given ms, regardless of the queue.\n */\nexport const intervalScheduler = (ms: number): Scheduler & { stop(): void } => {\n  let timerId: ReturnType<typeof setInterval>;\n  const fn: Scheduler & { stop(): void } = (queue, flush) => {\n    if (queue.length === 1) {\n      timerId = setInterval(flush, ms);\n    }\n  };\n  fn.stop = () => {\n    clearInterval(timerId);\n  };\n\n  return fn;\n};\n\n/**\n * Waits the given amount of ms after the first call to flush.\n */\nexport const timeoutScheduler = (ms: number): Scheduler & { stop(): void } => {\n  let timerId: ReturnType<typeof setTimeout>;\n  const fn: Scheduler & { stop(): void } = (queue, flush) => {\n    if (queue.length === 1) {\n      timerId = setTimeout(flush, ms);\n    }\n  };\n  fn.stop = () => {\n    clearTimeout(timerId);\n  };\n\n  return fn;\n};\n\n/**\n * Flushes after the given amount of calls.\n * @param max\n */\nexport const amountScheduler = (max: number): Scheduler => {\n  return (queue, flush) => {\n    if (queue.length === max) {\n      flush();\n    }\n  };\n};\n","import { Reject, Resolve, Resolver } from \"./types\";\n\nexport class Queue<Args, Result> {\n  readonly args: Args[] = [];\n  readonly resolvers: Resolver<Result>[] = [];\n\n  add(args: Args, resolve: Resolve<Result>, reject: Reject): void {\n    this.args.push(args);\n    this.resolvers.push({ resolve, reject });\n  }\n\n  reset(): { args: Args[]; resolvers: Resolver<Result>[] } {\n    const args = this.args.splice(0);\n    const resolvers = this.resolvers.splice(0);\n\n    return { args, resolvers };\n  }\n\n  isEmpty(): boolean {\n    return this.args.length === 0;\n  }\n\n  get length(): number {\n    return this.args.length;\n  }\n}\n","import { AddToBatch, ExecuteBatch, Scheduler } from \"./types\";\nimport { microtaskScheduler } from \"./schedulers\";\nimport { Queue } from \"./queue\";\n\nexport * from \"./schedulers\";\nexport * from \"./types\";\n\nexport function tinybatch<Args extends unknown[], Result = void>(\n  callback: ExecuteBatch<Args, Result>,\n  scheduler: Scheduler = microtaskScheduler(),\n): AddToBatch<Args, Result> {\n  const queue = new Queue<Args, Result>();\n\n  const fn: AddToBatch<Args, Result> = (...args) => {\n    return new Promise((resolve, reject) => {\n      queue.add(args, resolve, reject);\n\n      scheduler(queue.args, fn.flush);\n    });\n  };\n\n  fn.queue = queue;\n  fn.scheduler = scheduler;\n  fn.flush = async () => {\n    if (queue.isEmpty()) {\n      return;\n    }\n\n    const { args, resolvers } = queue.reset();\n    const results = (await callback(args)) ?? [];\n\n    for (let i = 0; i < resolvers.length; i++) {\n      const { resolve, reject } = resolvers[i];\n      const result = results[i];\n\n      if (result instanceof Error) {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    }\n  };\n\n  return fn;\n}\n\nexport default tinybatch;\n"],"names":["microtaskScheduler","queue","flush","length","queueMicrotask","intervalScheduler","ms","timerId","fn","setInterval","stop","clearInterval","timeoutScheduler","setTimeout","clearTimeout","amountScheduler","max","Queue","args","resolvers","_proto","prototype","add","resolve","reject","push","reset","splice","isEmpty","_createClass","key","get","tinybatch","callback","scheduler","_arguments","arguments","Promise","slice","call","_queue$reset","then","results","i","_resolvers$i","result","Error","e"],"mappings":"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"}